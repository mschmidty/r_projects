library(rpart)
library(rattle)
install.packages("rattle", repos="http://rattle.togaware.com", type="source”)
install.packages("tidyverse")
install.packages("tidyvers", repo='http://nbcgib.uesc.br/mirrors/cran/')
install.packages("tidyvers", repo='https://cran.cnr.Berkeley.edu/')
str(ip <- installed.packages(priority = "high"))
ip[, c(1,3:5)]
install.packages("tidyverse")
install.packages(“rattle”, dep=c(“Suggests”))
install.packages('rattle', dep=c("Suggests"))
library(rattle)
train<-read.csv("train.csv")
test<-read.csv("test.csv")
library(rpart)
library(rpart.plot)
library(RColorBrewer)
fit<- rpart(Survived~Pclass+Sex + Age +SibSp + Parch + Fare + Embarked, data=train, method="class")
plot(fit)
text(fit)
fancyRpartPlot(fit)
library(RGtk2)
install.packages("rattle", repos="http://rattle.togaware.com", type="source”)
install.packages(;)
never
install.packages("rattle")
library(RGtk2)
install.packages('RGtk2')
library(RGtk2)
intsall.packages("rattle")
install.packages("rattle")
library(rattle)
library(rpart.plot)
library(RColorBrewer)
library(rpart)
knitr::opts_chunk$set(echo = TRUE)
library(xml2)
library(dplyr)
library(ggplot2)
wd<-'~/Desktop/r/zillow'
setwd(wd)
getwd()
ggplot(data=houseData, aes(x=factor(0), amount2)) +
geom_boxplot() + geom_jitter(width = 0.2)
t<-read_xml("http://www.zillow.com/webservice/GetDeepComps.htm?zws-id=X1-ZWz19e3eor72tn_8uv2u&zpid=117920430&count=25")
x<-read_xml("http://www.zillow.com/webservice/GetDeepComps.htm?zws-id=X1-ZWz19e3eor72tn_8uv2u&zpid=117920430&count=25")
amount<-xml_find_all(x,"//amount")
amount%>%xml_attr("currency")%>%as.numeric()
comp<-x%>%xml_find_all("//comp")
amount<-xml_find_all(comp, "//amount")
amount2<-xml_text(amount)%>%as.integer
ggplot(data=houseData, aes(x=factor(0), amount2)) +
geom_boxplot() + geom_jitter(width = 0.2)
amount2<-xml_text(amount)%>%as.integer
details<- xml_find_all(comp,"//homedetails")
details2<- xml_text(details)
houseData<-data.frame( amount2, details2)
ggplot(data=houseData, aes(x=factor(0), amount2)) +
geom_boxplot() + geom_jitter(width = 0.2)
knitr::opts_chunk$set(echo = TRUE)
View(deepData)
deepComp<-read_xml("http://www.zillow.com/webservice/GetDeepComps.htm?zws-id=X1-ZWz19e3eor72tn_8uv2u&zpid=117920430&count=25")
library(xml2)
library(dplyr)
library(ggplot2)
deepComp<-read_xml("http://www.zillow.com/webservice/GetDeepComps.htm?zws-id=X1-ZWz19e3eor72tn_8uv2u&zpid=117920430&count=25")
deep<-deepComp%>%xml_find_all("//comp")
amountd<-xml_find_all(deep, "//amount")
amount2d<-xml_text(amountd)%>%as.integer
detailsd<- xml_find_all(deep,"//homedetails")
details2d<- xml_text(detailsd)
zpidd<-xml_find_all(deep,"//zpid")
zpid2d<-xml_text(zpidd)%>%as.integer
bathrooms<-xml_find_all(deep, "//bathrooms")
bathrooms2<-xml_text(bathrooms)%>%as.integer
bedrooms<-xml_find_all(deep, "//bedrooms")%>%
xml_text()%>%as.integer
lotSize<-xml_find_all(deep, "//lotSizeSqFt")%>%
xml_text()%>%as.integer
amount2d
deepData<-data.frame( amount2d, bathrooms2, bedrooms, details2d)
View(deepData)
write.csv(deepData,file="520houseComps.csv")
ggplot(houseData, aes(x=bedrooms, y=amount2, group=bathrooms2)) +
geom_boxplot()+ geom_jitter(width = 0.2)
ggplot(deepData, aes(x=bedrooms, y=amount2, group=bathrooms2)) +
geom_boxplot()+ geom_jitter(width = 0.2)
ggplot(deepData, aes(x=bedrooms, y=amount2d, group=bathrooms2)) +
geom_boxplot()+ geom_jitter(width = 0.2)
ggplot(deepData, aes(x=bedrooms, y=amount2d, group=bedrooms)) +
geom_boxplot()+ geom_jitter(width = 0.2)
ggplot(deepData, aes(x=bedrooms, y=amount2d, group=bedrooms)) +
geom_boxplot()+ geom_jitter(width = 0.2)
ggplot(deepData, aes(amount2d))+
geom_density()
ggplot(deepData, aes(amount2d, color=bedrooms))+
geom_density()
ggplot(deepData, aes(amount2d, colour=bedrooms))+
geom_density()
ggplot(deepData, aes(amount2d, fill=bedrooms))+
geom_density()
ggplot(deepData, aes(amount2d, groupby=bedrooms, fill=bedrooms))+
geom_density()
ggplot(deepData, aes(amount2d, group=bedrooms, fill=bedrooms))+
geom_density()
ggplot(deepData, aes(amount2d, group=bedrooms))+
geom_density()
deepData$bedroom<- as.factor(deepData$bedroom)
deepData$bedrooms<- as.factor(deepData$bedrooms)
ggplot(deepData, aes(amount2d, fill=bedrooms))+
geom_density()
ggplot(deepData, aes(amount2d))+
geom_density()
ggplot(deepData, aes(amount2d, color=bedrooms))+
geom_density()
deepData
ggplot(deepData, aes(amount2d, color=bedrooms))+
geom_density()
ggplot(deepData, aes(amount2d, groub=bedrooms))+
geom_density()
ggplot(deepData, aes(amount2d))+
geom_density()
knitr::opts_chunk$set(echo = TRUE)
wd <- "/Users/mikes/Desktop/r/random_forest_test"
setwd(wd)
getwd()
library(randomForest)
library(RCurl)
connection <- textConnection(downloaded)
connection <- textConnection(downloaded)
urlfile<-'http://archive.ics.uci.edu/ml/machine-learning-databases/horse-colic/horse-colic.data'
download<- getURL(urlfile, ssl.verifypeer=FALSE)
connection <- textConnection(downloaded)
connection <- textConnection(download)
data<- read.csv(connection, header=FALSE)
head(data)
data<- read.tsv(connection, header=FALSE)
data<- read.table(connection, sep= "\t", header=FALSE)
urlfile<-'http://archive.ics.uci.edu/ml/machine-learning-databases/horse-colic/horse-colic.data'
download<- getURL(urlfile, ssl.verifypeer=FALSE)
connection <- textConnection(download)
data<- read.table(connection, sep= "\t", header=FALSE)
head(data)
urlfile<-'http://archive.ics.uci.edu/ml/machine-learning-databases/horse-colic/horse-colic.data'
download<- getURL(urlfile, ssl.verifypeer=FALSE)
connection <- textConnection(download)
data<- read.table(connection, header=FALSE)
head(data)
data
summary(data)
set.seed(415)
set.seed(415)
fit<-randomForest(as.factor(V24) ~ V1 + V2 + V4 + V5 + V6 + V7 + V9 + V10 + V11,
data=data,
importance=TRUE,
ntree=1000)
names<-c(4:6)
data<-train
train<-data
train[,names]<-lapply(train[,names], number)
train[,names]<-lapply(train[,names], numberic)
train[,names]<-lapply(train[,names], numeric)
as.numeric(levels(train[,names]))
train
train[,names]<-as.numeric(levels(train[,names]))
as.numeric(train[,names])
train[train=="?"]<-NA
as.numeric(train[,names])
as.numeric(unlist(train[,names]))
train
lapply(train[,names], as.numeric)
train
train[,names]<-lapply(train[,names], as.numeric)
train
set.seed(415)
fit<-randomForest(as.factor(V24) ~ V1 + V2 + V4 + V5 + V6 + V7 + V9 + V10 + V11,
data=train,
importance=TRUE,
ntree=1000)
install.packages('missForest')
library(missForest)
library(missForest)
install.packages('missForest', dependencies = TRUE)
library(missForest)
install.packages("iterators")
install.packages('foreach')
library(missForest)
library(missForest)
summary(train)
set.seed(81)
miss<-prodNA(train[,names], noNA = 0.2)
miss
miss.imp<-missForest(miss, xtrue = train, verbose=TRUE)
miss.imp<-missForest(miss, xtrue = miss, verbose=TRUE)
miss.imp
head(miss.imp)
train[,names]<-miss.imp
train
names<-c(4:6)
train<-data
train[train=="?"]<-NA
train[,names]<-lapply(train[,names], as.numeric)
train
set.seed(81)
miss<-prodNA(train[,names], noNA = 0.2)
miss
miss.imp<-missForest(miss, xtrue = miss, verbose=TRUE)
head(miss.imp)
colnames(miss.imp)<-c("V4.imp", "V5.imp", "V6.imp")
head(miss.imp)
colnames(miss.imp)<-c("V4.imp", "V5.imp", "V6.imp")
colnames(miss.imp)<-c("V4imp", "V5imp", "V6imp")
library(tidyverse)
rename(miss.imp, V4=V4.imp, V5=V5.imp, V6=V6.imp)
as.dataframe(miss.imp)
as.dataFrame(miss.imp)
as.data.frame(miss.imp)
imputed<-miss.imp$ximp
train[,names]<-imputed
head(train)
is.na(train) <-"?"
train
train[is.na(train)] <-"?"
train
set.seed(415)
##fit<-randomForest(as.factor(V24) ~ V1 + V2 + V4 + V5 + V6 + V7 + V9 + V10 + V11,
##                data=train,
##              importance=TRUE,
##            ntree=1000)
fit<-randomForest(as.factor(V24) ~ V1 + V2 + V4 + V5 + V6 + V7 + V9 + V10 + V11,
data=train,
importance=TRUE,
ntree=1000)
varImpPlot(fit)
set.seed(415)
##fit<-randomForest(as.factor(V24) ~ V1 + V2 + V4 + V5 + V6 + V7 + V9 + V10 + V11,
##                data=train,
##              importance=TRUE,
##            ntree=1000)
fit<-randomForest(as.factor(V24) ~ V1 + V2 + V4 + V5 + V6 + V7 + V9 + V10 + V11,
data=train,
importance=TRUE,
ntree=2000)
varImpPlot(fit)
set.seed(415)
##fit<-randomForest(as.factor(V24) ~ V1 + V2 + V4 + V5 + V6 + V7 + V9 + V10 + V11,
##                data=train,
##              importance=TRUE,
##            ntree=1000)
fit<-randomForest(as.factor(V24) ~ V2 + V4 + V5 + V6 + V7 + V9 + V10 + V11,
data=train,
importance=TRUE,
ntree=2000)
varImpPlot(fit)
set.seed(415)
##fit<-randomForest(as.factor(V24) ~ V1 + V2 + V4 + V5 + V6 + V7 + V9 + V10 + V11,
##                data=train,
##              importance=TRUE,
##            ntree=1000)
fit<-randomForest(as.factor(V24) ~ V2 + V4 + V5 + V6 + V7 + V9 + V10 + V11 + V12 + V13 +V14 + V15 + V17 + V18,
data=train,
importance=TRUE,
ntree=2000)
varImpPlot(fit)
set.seed(415)
##fit<-randomForest(as.factor(V24) ~ V1 + V2 + V4 + V5 + V6 + V7 + V9 + V10 + V11,
##                data=train,
##              importance=TRUE,
##            ntree=1000)
fit<-randomForest(as.factor(V24) ~ V2 + V4 + V5 + V6 + V7 + V9 + V10 + V11 + V12 + V13 +V14 + V15 + V17 + V18,
data=train,
importance=TRUE,
ntree=1000)
varImpPlot(fit)
set.seed(415)
##fit<-randomForest(as.factor(V24) ~ V1 + V2 + V4 + V5 + V6 + V7 + V9 + V10 + V11,
##                data=train,
##              importance=TRUE,
##            ntree=1000)
fit<-randomForest(as.factor(V24) ~ V2 + V4 + V5 + V6 + V7 + V9 + V10 + V11 + V12 + V13 +V14 + V15 + V17 + V18,
data=train,
importance=TRUE,
ntree=2000)
varImpPlot(fit)
set.seed(415)
##fit<-randomForest(as.factor(V24) ~ V1 + V2 + V4 + V5 + V6 + V7 + V9 + V10 + V11,
##                data=train,
##              importance=TRUE,
##            ntree=1000)
fit<-randomForest(as.factor(V24) ~ V2 + V4 + V5 + V6 + V7 + V9 + V10 + V11 + V12 + V13 +V14 + V15 + V17 + V18,
data=train,
importance=TRUE,
ntree=3000)
varImpPlot(fit)
urlfile2<-'http://archive.ics.uci.edu/ml/machine-learning-databases/horse-colic/horse-colic.test'
download2<- getURL(urlfile2, ssl.verifypeer=FALSE)
connection2 <- textConnection(download2)
test<- read.table(connection2, header=FALSE)
test
names<-c(4:6)
test[test=="?"]<-NA
test[,names]<-lapply(test[,names], as.numeric)
test
set.seed(81)
test.miss<-prodNA(test[,names], noNA = 0.2)
test.miss
test.miss.imp<-missForest(test.miss, xtrue = test.miss, verbose=TRUE)
head(test.miss.imp)
test.imputed<-test.miss.imp$ximp ##This is really important, it is the imputed datat that is in a dataframe
test[,names]<-test.imputed
head(test)
test[is.na(test)] <-"?"
test
Prediction <- predict(fit, test)
train[,!(names(train) %in% drops)]
drops<-c("?")
train[,!(names(train) %in% drops)]
set.seed(415)
##fit<-randomForest(as.factor(V24) ~ V1 + V2 + V4 + V5 + V6 + V7 + V9 + V10 + V11,
##                data=train,
##              importance=TRUE,
##            ntree=1000)
fit<-randomForest(as.factor(V24) ~ V2 + V4 + V5 + V6 + V7 + V9 + V10 + V11 + V12 + V13 +V14 + V15 + V17 + V18,
data=train,
importance=TRUE,
ntree=3000)
varImpPlot(fit)
Prediction <- predict(fit, test)
knitr::opts_chunk$set(echo = TRUE)
wd <- "/Users/mikes/Desktop/r/random_forest_test"
setwd(wd)
getwd()
